#!/usr/bin/env bash

. ~/ui/dzen2/variables

while read -r line; do
  case $line in
    B*)
      battery_lvl="$(echo ${line} | cut -d' ' -f4 | rev | cut -c 3- | rev)"

      if [[ $battery_lvl -lt 10 ]]; then
        battery_clr=$battery_exlow

      elif [[ $battery_lvl -lt 25 ]]; then
        battery_clr=$battery_vlow

      elif [[ $battery_lvl -lt 50 ]]; then
        battery_clr=$battery_low

      elif [[ $battery_lvl -lt 75 ]]; then
        battery_clr=$battery_good

      elif [[ $battery_lvl -lt 95 ]]; then
        battery_clr=$battery_high

      else
        battery_clr=$battery_full
      fi

      if [[ $battery_lvl -lt 10 ]]; then
        battery_ico="${battery_icon}10.xbm"

      elif [[ $battery_lvl -lt 20 ]]; then
        battery_ico="${battery_icon}10.xbm"

      elif [[ $battery_lvl -lt 30 ]]; then
        battery_ico="${battery_icon}20.xbm"

      elif [[ $battery_lvl -lt 40 ]]; then
        battery_ico="${battery_icon}30.xbm"

      elif [[ $battery_lvl -lt 50 ]]; then
        battery_ico="${battery_icon}40.xbm"

      elif [[ $battery_lvl -lt 60 ]]; then
        battery_ico="${battery_icon}50.xbm"

      elif [[ $battery_lvl -lt 70 ]]; then
        battery_ico="${battery_icon}60.xbm"

      elif [[ $battery_lvl -lt 80 ]]; then
        battery_ico="${battery_icon}70.xbm"

      elif [[ $battery_lvl -lt 90 ]]; then
        battery_ico="${battery_icon}80.xbm"

      else
        battery_ico="${battery_icon}90.xbm"
      fi

      if [[ $battery_lvl -lt 10 ]]; then
        ac="^fg($ws_bg_clr)^bg($battery_clr)"
      else
        ac="^fg($battery_clr)^bg()"
      fi

      ac_status="$(echo ${line} | cut -d' ' -f3)"

      if [[ "$ac_status" == "C"* ]]; then
        ac="^fg($ac_clr)^i(${ac_icon}) "

        if [[ $battery_lvl -lt 95 ]]; then
          ac="${ac}^fg($battery_clr)^bg()"
        else
          ac="${ac}^fg($ws_bg_clr)^bg($battery_clr)"
        fi
      fi

      battery_info="$(echo ${line} | cut -d' ' -f4-5 | sed 's/,//g')"
      battery="${ac} ^i(${battery_ico}) ${battery_info} ^fg()^bg()"
      ;;

    player)
      playing="$(mpc status | sed -n 2p | cut -d "[" -f2 | cut -d "]" -f1)"

      if [[ $playing != "playing" ]]; then
        music="^fg(${not_playing_clr})^i(${music_icon}) $(mpc current)^fg()"

      else
        current="$(mpc current)"
        artist="^fg($artist_clr)$(awk -F' - ' '{print $1}' <<< ${current})"
        song="$(awk -F' - ' '{print $2}' <<< ${current})"
        mod=""

        # TODO: Check for ".ft"'s too in the track field, so to colour secondary
        # artists too, differently from the track name itself.
        if [[ "${song}" == *"("*")"* ]]; then
          mod="^fg($mod_clr)$(sed 's/.*\(([^)]*)\).*/\1/g' <<< ${song})"
          song="$(cut -d '(' -f1 <<< ${song})"
        fi

        music="^fg($music_icon_clr)^i(${music_icon}) ${artist}^fg($music_icon_clr) - ^fg($song_clr)${song}${mod}^fg()"
      fi
      ;;

    T*)
      time="^fg($separator_clr)|^fg() ^i(${time_icon}) ${line:1}"
      ;;

    W*)
      workspaces=${line%%','*}
      layout=${line#*','}
      ;;

  esac
  left="^p(2)$layout ^fg($separator_clr)|^fg() $(sed -e's/é/e/g' <<< ${music//Ø/O})"
  center="^p(_CENTER)^p(-$center_offset)${workspaces:1}"
  right="^p(_RIGHT)^p(-$battery_offset)$battery^p(_RIGHT)^p(-$time_offset)$time"
  printf "%s\n" "$left$center$right"
done
