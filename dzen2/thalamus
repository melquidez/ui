#!/bin/env bash

. ~/etsi/dzen2/variables

NORMIFS=$IFS
FIELDIFS=':'

while read -r line; do
  case $line in
    B*)
      BATTERY_LVL="$(echo ${line} | cut -d' ' -f4 | rev | cut -c 3- | rev)"

      if [[ $BATTERY_LVL -lt 10 ]]; then
        BATTERY_CLR=$BATTERY_EXLOW

      elif [[ $BATTERY_LVL -lt 25 ]]; then
        BATTERY_CLR=$BATTERY_VLOW

      elif [[ $BATTERY_LVL -lt 50 ]]; then
        BATTERY_CLR=$BATTERY_LOW

      elif [[ $BATTERY_LVL -lt 75 ]]; then
        BATTERY_CLR=$BATTERY_GOOD

      elif [[ $BATTERY_LVL -lt 95 ]]; then
        BATTERY_CLR=$BATTERY_HIGH

      else
        BATTERY_CLR=$BATTERY_FULL
      fi

      if [[ $BATTERY_LVL -lt 10 ]]; then
        BATTERY_ICO="${BATTERY_ICON}10.xbm"

      elif [[ $BATTERY_LVL -lt 20 ]]; then
        BATTERY_ICO="${BATTERY_ICON}10.xbm"

      elif [[ $BATTERY_LVL -lt 30 ]]; then
        BATTERY_ICO="${BATTERY_ICON}20.xbm"

      elif [[ $BATTERY_LVL -lt 40 ]]; then
        BATTERY_ICO="${BATTERY_ICON}30.xbm"

      elif [[ $BATTERY_LVL -lt 50 ]]; then
        BATTERY_ICO="${BATTERY_ICON}40.xbm"

      elif [[ $BATTERY_LVL -lt 60 ]]; then
        BATTERY_ICO="${BATTERY_ICON}50.xbm"

      elif [[ $BATTERY_LVL -lt 70 ]]; then
        BATTERY_ICO="${BATTERY_ICON}60.xbm"

      elif [[ $BATTERY_LVL -lt 80 ]]; then
        BATTERY_ICO="${BATTERY_ICON}70.xbm"

      elif [[ $BATTERY_LVL -lt 90 ]]; then
        BATTERY_ICO="${BATTERY_ICON}80.xbm"

      else
        BATTERY_ICO="${BATTERY_ICON}90.xbm"
      fi

      if [[ $BATTERY_LVL -lt 10 ]]; then
        AC="^fg($URGENT_FG)^bg($BATTERY_CLR)"
      else
        AC="^fg($BATTERY_CLR)^bg()"
      fi

      AC_STATUS="$(echo ${line} | cut -d' ' -f3)"

      if [[ "$AC_STATUS" == "C"* ]]; then
        AC="^fg($AC_CLR)^i(${AC_ICON}) "

        if [[ $BATTERY_LVL -lt 95 ]]; then
          AC="${AC}^fg($BATTERY_CLR)^bg()"
        else
          AC="${AC}^fg($URGENT_FG)^bg($BATTERY_CLR)"
        fi
      fi

      BATTERY_INFO="$(echo ${line} | cut -d' ' -f4-5 | sed 's/,//g')"
      battery="${AC} ^i(${BATTERY_ICO}) ${BATTERY_INFO} ^fg()^bg()"
      ;;

    player)
      playing="$(mpc status | sed -n 2p | cut -d "[" -f2 | cut -d "]" -f1)"

      if [[ $playing != "playing" ]]; then
        music="^fg(${NOT_PLAYING_CLR})^i(${MUSIC_ICON}) $(mpc current)^fg()"

      else
        CURRENT="$(mpc current)"
        ARTIST="^fg($ARTIST_CLR)$(awk -F' - ' '{print $1}' <<< ${CURRENT})"
        SONG="$(awk -F' - ' '{print $2}' <<< ${CURRENT})"
        MOD=""

        # TODO: Check for ".ft"'s too in the track field, so to colour secondary
        # artists too, differently from the track name itself.

        if [[ "${SONG}" == *"("*")"* ]]; then
          MOD="^fg($MOD_CLR)$(sed 's/.*\(([^)]*)\).*/\1/g' <<< ${SONG})"
          SONG="$(cut -d '(' -f1 <<< ${SONG})"
        fi

        music="^fg($MUSIC_ICON_CLR)^i(${MUSIC_ICON}) ${ARTIST}^fg($MUSIC_ICON_CLR) - ^fg($SONG_CLR)${SONG}${MOD}^fg()"
      fi
      ;;

    T*)
      time="^fg($SEPARATOR_CLR)|^fg() ^i(${TIME_ICON}) ${line:1}"
      ;;

    W*)
      workspaces=""
      IFS=$FIELDIFS
      set -- ${line#?}
      while [ $# -gt 0 ] ; do
        item=$1

        case $item in
          [OoFfUu]*)
            name=${item#?}

            case $item in
              O*)
                FG=$FOCUSED_OCCUPIED_CLR
                WS_ICON=$WS_FILLED_ICON
                ;;

              F*)
                FG=$FOCUSED_FREE_CLR
                WS_ICON=$WS_FILLED_ICON
                ;;

              U*)
                FG=$FOCUSED_URGENT_CLR
                WS_ICON=$WS_FILLED_ICON
                ;;

              o*)
                FG=$OCCUPIED_CLR
                WS_ICON=$WS_EMPTY_ICON
                ;;

              f*)
                FG=$FREE_CLR
                WS_ICON=$WS_EMPTY_ICON
                ;;

              u*)
                FG=$URGENT_CLR
                WS_ICON=$WS_FILLED_ICON
                ;;

            esac
            workspaces="${workspaces}^fg(${FG})^bg(${WS_BG_CLR}) ^i(${WS_ICON}) ^fg()^bg()"
            ;;

        esac
        shift
      done
      IFS=$NORMIFS
      ;;

  esac
  left="^p(2)^fg($ARCH_ICON_CLR)^i(${ARCH_ICON})^fg() ${music//Ã˜/O}"
  center="^p(_CENTER)^p(-$CENTER_OFFSET)$workspaces"
  right="^p(_RIGHT)^p(-$BATTERY_OFFSET)$battery^p(_RIGHT)^p(-$TIME_OFFSET)$time"

  printf "%s\n" "$left$center$right"
done
