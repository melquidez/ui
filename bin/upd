#!/bin/bash

# Dependencies:
# - git
# - mercurial
# - vim
#
# NOTE: If it is the first time updating after a new clone, one should run the
# following instead of running this script:
#
#     git submodule foreach -q 'git checkout $(git config -f \
#     $toplevel/.gitmodules submodule.$name.branch || echo master)'
#
# This is because all the submodules will be in a 'detached HEAD' state, so the
# "git pull"'s in this script will not work.
#
# The command to rollback a git submodule is NOT `git checkout` as it is for
# normal files, but rather you have to run `git reset --hard HEAD@{1}` from the
# directory of the submodule.
#
# TODO: Figure out the equivalent command for mercurial. (Think it might
# something like `hg update -r <rev-id>`.)

root="${HOME}/ui"
update_log=$root/update-log
third_party_packages=$root/vendor
emacs_packages_dir=$third_party_packages/emacs

dl_hg_packages=$root/misc/dl-hg-packages
cd $emacs_packages_dir/evil

if hg incoming -q; then
  hg pull -u
  new_id=$(hg --debug id -i)
  origin='https://bitbucket.org/lyro/evil'
  echo '#!/bin/bash' > $dl_hg_packages
  printf \
    "cd ${emacs_packages_dir/$HOME/\~}\nhg clone -r ${new_id} ${origin}\n" >> \
    $dl_hg_packages
fi

find $root -type f -name '.git' -execdir bash -c 'git pull -q &' \; | tee
