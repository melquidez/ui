#!/bin/env bash

# TODO: npm packages.
# TODO: pip packages.
# TODO: Hackage packages (via cabal-install).
# TODO: Check AUR -git packages.
# TODO: Use `git status --porcelain` for `ch_if_clean`?

# Obviously run `sudo pacman -Syu` separately before running this script, after
# checking the news of course!

cd ~/etsi

ch_if_clean () {
  abort () {
    echo "ERROR: Working directory is unclean! Aborting."
    exit 1
  }

  git diff --exit-code

  if [[ $? -ne 0 ]]; then
    abort
  else
    git diff --cached --exit-code

    if [[ $? -ne 0 ]]; then
      abort
    else
      any_untracked_files="$(git ls-files --other --exclude-standard --directory)"

      if [[ -n "${any_untracked_files}" ]]; then
        abort
      fi
    fi
  fi
}

ch_aur_ex_git () {
  cwr_out="$(cower -u)"

  if [[ -n "${cwr_out}" ]]; then
    echo "AUR updates available! [1/5]"
    echo "${cwr_out}"
    read -p "Continue? (Y/n)" cwr_choice

    if [[ "${cwr_choice}" == "n" ]]; then
      exit 0
    fi

  else
    echo "No AUR updates. (N.B. -git packages NOT checked.) [1/5]"
  fi
}

g_chore_commit () {
  git add -A
  printf "chore(${1}): update commit reference" | git commit -eF -
}

upd_plugin_manager () {
  cd $1
  git pull
  cd ~/etsi
  g_chore_commit ${1##*/}
}

g_fetch_dr () {
  cd $1
  local_hash="$(git log --pretty=%H master | head -n1)"
  remote_hash="$(git ls-remote origin -h refs/heads/master | cut -f1)"
  cd ~/etsi

  if [[ $local_hash != $remote_hash ]]; then
    upd_plugin_manager $1
  fi
}

chu_antigen () {
  echo "Checking if antigen has updates... [4/5]"
  g_fetch_dr ~/etsi/antigen
}

chu_vim_plug () {
  echo "Checking if vim-plug has updates... [5/5]"
  g_fetch_dr ~/etsi/vim-plug
}

upd_zsh_plugins () {
  echo "Checking for updates to vim plugins... [2/5]"

  if [[ `antigen update | grep -cim1 'Already up-to-date.'` -eq 0 ]]; then
    antigen snapshot ~/etsi/zsh-plugins-snapshot
    git add -A
    printf "chore(zsh-plugins-snapshot): update hash references" | git commit -eF -
  fi
}

upd_vim_plugins () {
  echo "Checking for updates to vim plugins... [3/5]"
  vim +PlugUpdate +only

  if [[ `git ls-files -m | grep -cim1 vim-plugins-snapshot` -eq 1 ]]; then
    git add -A
    printf "chore(vim-plugins-snapshot): update hash references" | git commit -eF -
  fi
}

ch_if_clean
ch_aur_ex_git
upd_zsh_plugins
upd_vim_plugins
chu_antigen
chu_vim_plug
